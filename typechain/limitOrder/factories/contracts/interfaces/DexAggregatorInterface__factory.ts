/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  DexAggregatorInterface,
  DexAggregatorInterfaceInterface,
} from "../../../contracts/interfaces/DexAggregatorInterface";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "desToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "desToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "secondsAgo",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "dexData",
        type: "bytes",
      },
    ],
    name: "getPriceCAvgPriceHAvgPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cAvgPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "hAvgPrice",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "desToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "timeWindow",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "updatePriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class DexAggregatorInterface__factory {
  static readonly abi = _abi;
  static createInterface(): DexAggregatorInterfaceInterface {
    return new Interface(_abi) as DexAggregatorInterfaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DexAggregatorInterface {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DexAggregatorInterface;
  }
}
