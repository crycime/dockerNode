/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  OLETokenLock,
  OLETokenLockInterface,
} from "../../../contracts/udex/OLETokenLock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract OLEToken",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "beneficiaries",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint128[]",
        name: "startTimes",
        type: "uint128[]",
      },
      {
        internalType: "uint128[]",
        name: "endTimes",
        type: "uint128[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Release",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferTo",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "lockedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "releaseAbleAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "releaseVars",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "startTime",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "endTime",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "lastUpdateTime",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract OLEToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010a0380380620010a0833981810160405260a08110156200003757600080fd5b8151602083018051604051929492938301929190846401000000008211156200005f57600080fd5b9083019060208201858111156200007557600080fd5b82518660208202830111640100000000821117156200009357600080fd5b82525081516020918201928201910280838360005b83811015620000c2578181015183820152602001620000a8565b5050505090500160405260200180516040519392919084640100000000821115620000ec57600080fd5b9083019060208201858111156200010257600080fd5b82518660208202830111640100000000821117156200012057600080fd5b82525081516020918201928201910280838360005b838110156200014f57818101518382015260200162000135565b50505050905001604052602001805160405193929190846401000000008211156200017957600080fd5b9083019060208201858111156200018f57600080fd5b8251866020820283011164010000000082111715620001ad57600080fd5b82525081516020918201928201910280838360005b83811015620001dc578181015183820152602001620001c2565b50505050905001604052602001805160405193929190846401000000008211156200020657600080fd5b9083019060208201858111156200021c57600080fd5b82518660208202830111640100000000821117156200023a57600080fd5b82525081516020918201928201910280838360005b83811015620002695781810151838201526020016200024f565b505050509050016040525050508251845114801562000289575081518451145b801562000297575080518451145b620002e9576040805162461bcd60e51b815260206004820152601960248201527f4172726179206c656e677468206d7573742062652073616d6500000000000000604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0387161781555b8451811015620004a1578281815181106200031c57fe5b60200260200101516001600160801b03168282815181106200033a57fe5b60200260200101516001600160801b031611620003895760405162461bcd60e51b81526004018080602001828103825260268152602001806200107a6026913960400191505060405180910390fd5b60008582815181106200039857fe5b602002602001015190506040518060800160405280868481518110620003ba57fe5b60200260200101518152602001858481518110620003d457fe5b60200260200101516001600160801b03168152602001848481518110620003f757fe5b60200260200101516001600160801b031681526020018584815181106200041a57fe5b6020908102919091018101516001600160801b039081169092526001600160a01b039093166000908152600180855260409182902084518155948401518582018054938601518516600160801b029185166001600160801b031994851617851691909117905560609093015160029094018054949092169316929092179091550162000305565b505050505050610bc380620004b76000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630792d725146100675780632ccb1b301461009f57806343d9a2b4146100cd57806386d1a69f14610124578063a153e7081461012c578063fc0c546a14610152575b600080fd5b61008d6004803603602081101561007d57600080fd5b50356001600160a01b0316610176565b60408051918252519081900360200190f35b6100cb600480360360408110156100b557600080fd5b506001600160a01b0381351690602001356102e9565b005b6100f3600480360360208110156100e357600080fd5b50356001600160a01b031661069a565b604080519485526001600160801b039384166020860152918316848301529091166060830152519081900360800190f35b6100cb6106d1565b61008d6004803603602081101561014257600080fd5b50356001600160a01b03166106dc565b61015a6107ab565b604080516001600160a01b039092168252519081900360200190f35b6001600160a01b0381166000908152600160208181526040808420815160808101835281548152938101546001600160801b03808216948601859052600160801b90910481169285019290925260020154166060830152421015610216576040805162461bcd60e51b81526020600482015260126024820152716e6f742074696d6520746f20756e6c6f636b60701b604482015290519081900360640190fd5b8051610269576040805162461bcd60e51b815260206004820152601a60248201527f62656e656669636961727920646f6573206e6f74206578697374000000000000604482015290519081900360640190fd5b600081604001516001600160801b031642116102855742610294565b81604001516001600160801b03165b90506102e182602001518360400151036001600160801b03166102db84600001516102d586606001516001600160801b0316866107ba90919063ffffffff16565b9061081c565b90610875565b949350505050565b3360008181526001602052604090205461034a576040805162461bcd60e51b815260206004820152601a60248201527f62656e656669636961727920646f6573206e6f74206578697374000000000000604482015290519081900360640190fd5b6001600160a01b038316600090815260016020526040902054156103a3576040805162461bcd60e51b815260206004820152600b60248201526a1d1bc81a5cc8195e1a5cdd60aa1b604482015290519081900360640190fd5b806001600160a01b0316836001600160a01b031614156103f9576040805162461bcd60e51b815260206004820152600c60248201526b73616d65206164647265737360a01b604482015290519081900360640190fd5b610402816108dc565b600061040d826106dc565b905082811015610451576040805162461bcd60e51b815260206004820152600a60248201526909cdee840cadcdeeaced60b31b604482015290519081900360640190fd5b61045b81846107ba565b6001600160a01b038316600090815260016020819052604082209283559190910154426001600160801b039091161161049457426104bb565b6001600160a01b038316600090815260016020819052604090912001546001600160801b03165b90508060016000856001600160a01b03166001600160a01b0316815260200190815260200160002060010160006101000a8154816001600160801b0302191690836001600160801b031602179055506040518060800160405280858152602001826001600160801b0316815260200160016000866001600160a01b03166001600160a01b0316815260200190815260200160002060010160109054906101000a90046001600160801b03166001600160801b03168152602001826001600160801b031681525060016000876001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160106101000a8154816001600160801b0302191690836001600160801b0316021790555060608201518160020160006101000a8154816001600160801b0302191690836001600160801b031602179055509050507fd70645d60a6465bb7b8c93d33a3bd06236ce6a6b1ea6111401bb4724dbaaefef83868660405180846001600160a01b03168152602001836001600160a01b03168152602001828152602001935050505060405180910390a15050505050565b60016020819052600091825260409091208054918101546002909101546001600160801b0380831692600160801b90048116911684565b6106da336108dc565b565b6001600160a01b0381166000908152600160208181526040808420815160808101835281548152938101546001600160801b0380821694860194909452600160801b90048316918401829052600201549091166060830152421115610775576040805162461bcd60e51b815260206004820152600a6024820152691b1bd8dad95908195b9960b21b604482015290519081900360640190fd5b60208101516040820151606083015183516107a4936001600160801b039084038116936102db9390031661081c565b9392505050565b6000546001600160a01b031681565b600082821115610811576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b508082035b92915050565b60008261082b57506000610816565b8282028284828161083857fe5b04146107a45760405162461bcd60e51b8152600401808060200182810382526021815260200180610b6d6021913960400191505060405180910390fd5b60008082116108cb576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816108d457fe5b049392505050565b60008054604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561092857600080fd5b505afa15801561093c573d6000803e3d6000fd5b505050506040513d602081101561095257600080fd5b505190508061099e576040805162461bcd60e51b81526020600482015260136024820152726e6f20616d6f756e7420617661696c61626c6560681b604482015290519081900360640190fd5b60006109a983610176565b905080821015610a00576040805162461bcd60e51b815260206004820152601b60248201527f7472616e73666572206f7574206c696d69742065786365656473200000000000604482015290519081900360640190fd5b6001600160a01b03831660009081526001602081905260409091200154600160801b90046001600160801b03164211610a395742610a67565b6001600160a01b03831660009081526001602081905260409091200154600160801b90046001600160801b03165b6001600160a01b03848116600081815260016020908152604080832060020180546fffffffffffffffffffffffffffffffff19166001600160801b0397909716969096179095558154855163a9059cbb60e01b81526004810194909452602484018790529451949093169363a9059cbb936044808501949193918390030190829087803b158015610af757600080fd5b505af1158015610b0b573d6000803e3d6000fd5b505050506040513d6020811015610b2157600080fd5b5050604080516001600160a01b03851681526020810183905281517ff6334794522b9db534a812aaae1af828a2e96aac68473b58e36d7d0bfd67477b929181900390910190a150505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122015cf75e1a6ecf3ea49c6b247091793c71b3430c20136fd40446766219d94c61964736f6c63430007060033537461727454696d65206d757374206265206561726c696572207468616e20656e6454696d65";

type OLETokenLockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OLETokenLockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OLETokenLock__factory extends ContractFactory {
  constructor(...args: OLETokenLockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    token_: AddressLike,
    beneficiaries: AddressLike[],
    amounts: BigNumberish[],
    startTimes: BigNumberish[],
    endTimes: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      token_,
      beneficiaries,
      amounts,
      startTimes,
      endTimes,
      overrides || {}
    );
  }
  override deploy(
    token_: AddressLike,
    beneficiaries: AddressLike[],
    amounts: BigNumberish[],
    startTimes: BigNumberish[],
    endTimes: BigNumberish[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      token_,
      beneficiaries,
      amounts,
      startTimes,
      endTimes,
      overrides || {}
    ) as Promise<
      OLETokenLock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OLETokenLock__factory {
    return super.connect(runner) as OLETokenLock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OLETokenLockInterface {
    return new Interface(_abi) as OLETokenLockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OLETokenLock {
    return new Contract(address, _abi, runner) as unknown as OLETokenLock;
  }
}
