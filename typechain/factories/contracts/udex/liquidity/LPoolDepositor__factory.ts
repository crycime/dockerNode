/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  LPoolDepositor,
  LPoolDepositorInterface,
} from "../../../../contracts/udex/liquidity/LPoolDepositor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "NewAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldPendingAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newPendingAdmin",
        type: "address",
      },
    ],
    name: "NewPendingAdmin",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "pool",
        type: "address",
      },
    ],
    name: "depositNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "developer",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newPendingAdmin",
        type: "address",
      },
    ],
    name: "setPendingAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferToPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600380546001600160a01b03191633179055610845806100326000396000f3fe6080604052600436106100865760003560e01c80634dd18bf5116100595780634dd18bf5146101325780635c60da1b14610165578063ca4b208b1461017a578063d7efa1291461018f578063f851a440146101c857610086565b80630e18b6811461008b57806326782247146100a257806333bb7f91146100d357806347e7ef24146100f9575b600080fd5b34801561009757600080fd5b506100a06101dd565b005b3480156100ae57600080fd5b506100b76102dd565b604080516001600160a01b039092168252519081900360200190f35b6100a0600480360360208110156100e957600080fd5b50356001600160a01b03166102ec565b34801561010557600080fd5b506100a06004803603604081101561011c57600080fd5b506001600160a01b038135169060200135610356565b34801561013e57600080fd5b506100a06004803603602081101561015557600080fd5b50356001600160a01b03166103bc565b34801561017157600080fd5b506100b7610427565b34801561018657600080fd5b506100b7610436565b34801561019b57600080fd5b506100a0600480360360408110156101b257600080fd5b506001600160a01b038135169060200135610445565b3480156101d457600080fd5b506100b7610552565b6002546001600160a01b031633146102265760405162461bcd60e51b81526004018080602001828103825260228152602001806107ee6022913960400191505060405180910390fd5b60018054600280546001600160a01b038082166001600160a01b031980861682179687905590921690925560408051938316808552949092166020840152815190927ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc92908290030190a1600254604080516001600160a01b038085168252909216602083015280517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99281900390910190a15050565b6002546001600160a01b031681565b604080516308934a5f60e31b815233600482015260006024820181905291516001600160a01b0384169263449a52f89234926044808301939282900301818588803b15801561033a57600080fd5b505af115801561034e573d6000803e3d6000fd5b505050505050565b6001600160a01b038216600081815260046020818152604080842033808652925280842086905580516308934a5f60e31b815292830191909152602482018590525163449a52f89260448084019391929182900301818387803b15801561033a57600080fd5b6103c4610561565b600280546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935281517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9929181900390910190a15050565b6000546001600160a01b031681565b6003546001600160a01b031681565b3360009081526004602090815260408083206001600160a01b038616845290915290205481146104b0576040805162461bcd60e51b8152602060048201526011602482015270666f722063616c6c6261636b206f6e6c7960781b604482015290519081900360640190fd5b3360008181526004602081815260408084206001600160a01b03881685528252808420939093558251636f307dc360e01b8152925161054d948794909387938593636f307dc3938084019390829003018186803b15801561051057600080fd5b505afa158015610524573d6000803e3d6000fd5b505050506040513d602081101561053a57600080fd5b50516001600160a01b03169291906105b9565b505050565b6001546001600160a01b031681565b6001546001600160a01b031633146105b7576040805162461bcd60e51b815260206004820152601460248201527331b0b63632b91036bab9ba1031329030b236b4b760611b604482015290519081900360640190fd5b565b600081156107e5576000856001600160a01b03166370a08231856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561061057600080fd5b505afa158015610624573d6000803e3d6000fd5b505050506040513d602081101561063a57600080fd5b5051604080516001600160a01b0388811660248301528781166044830152606480830188905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17815292518251949550908a1693919290918291908083835b602083106106c05780518252601f1990920191602091820191016106a1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610722576040519150601f19603f3d011682016040523d82523d6000602084013e610727565b606091505b5050506000866001600160a01b03166370a08231866040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561077957600080fd5b505afa15801561078d573d6000803e3d6000fd5b505050506040513d60208110156107a357600080fd5b505190508181116107e1576040805162461bcd60e51b81526020600482015260036024820152622a232360e91b604482015290519081900360640190fd5b0390505b94935050505056fe6f6e6c792070656e64696e6741646d696e2063616e206163636570742061646d696ea26469706673582212206dd0128b4b1dd576d16cdbdb085fb4b766bc9082612f2abbbfe03b00ad4b2a0064736f6c63430007060033";

type LPoolDepositorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPoolDepositorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPoolDepositor__factory extends ContractFactory {
  constructor(...args: LPoolDepositorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LPoolDepositor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LPoolDepositor__factory {
    return super.connect(runner) as LPoolDepositor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPoolDepositorInterface {
    return new Interface(_abi) as LPoolDepositorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LPoolDepositor {
    return new Contract(address, _abi, runner) as unknown as LPoolDepositor;
  }
}
