/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  OleLpStakeAutomator,
  OleLpStakeAutomatorInterface,
} from "../../../contracts/udex/OleLpStakeAutomator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "NewAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldPendingAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newPendingAdmin",
        type: "address",
      },
    ],
    name: "NewPendingAdmin",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "createLockBoth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "createLockOLE",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "otherAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "createLockOther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "developer",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "increaseAmountBoth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "increaseAmountOLE",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "otherAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "increaseAmountOther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract XOLEInterface",
        name: "_xole",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_ole",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_otherToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "contract IWETH",
        name: "_nativeToken",
        type: "address",
      },
      {
        internalType: "contract IUniswapV2Router01",
        name: "_router",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeToken",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ole",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "otherToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newPendingAdmin",
        type: "address",
      },
    ],
    name: "setPendingAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "withdrawBoth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "withdrawOle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "withdrawOther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xole",
    outputs: [
      {
        internalType: "contract XOLEInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type OleLpStakeAutomatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OleLpStakeAutomatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OleLpStakeAutomator__factory extends ContractFactory {
  constructor(...args: OleLpStakeAutomatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OleLpStakeAutomator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OleLpStakeAutomator__factory {
    return super.connect(runner) as OleLpStakeAutomator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OleLpStakeAutomatorInterface {
    return new Interface(_abi) as OleLpStakeAutomatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OleLpStakeAutomator {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OleLpStakeAutomator;
  }
}
