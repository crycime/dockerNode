/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  OleLpStakeAutomatorInterface,
  OleLpStakeAutomatorInterfaceInterface,
} from "../../../../contracts/udex/OleLpStakeAutomatorInterface.sol/OleLpStakeAutomatorInterface";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "createLockBoth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "createLockOLE",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "otherAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "createLockOther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "increaseAmountBoth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "increaseAmountOLE",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "otherAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "increaseAmountOther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "withdrawBoth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "withdrawOle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oleMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "otherMin",
        type: "uint256",
      },
    ],
    name: "withdrawOther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class OleLpStakeAutomatorInterface__factory {
  static readonly abi = _abi;
  static createInterface(): OleLpStakeAutomatorInterfaceInterface {
    return new Interface(_abi) as OleLpStakeAutomatorInterfaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OleLpStakeAutomatorInterface {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OleLpStakeAutomatorInterface;
  }
}
