/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  UniV3Dex,
  UniV3DexInterface,
} from "../../../../../contracts/udex/dex/eth/UniV3Dex";

const _abi = [
  {
    inputs: [],
    name: "uniV3Factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506109c6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063705e474b1461003b578063fa461e3314610059575b600080fd5b61004361006e565b6040516100509190610936565b60405180910390f35b61006c61006736600461080e565b61007d565b005b6000546001600160a01b031681565b600084138061008c5750600083135b61009557600080fd5b60006100a382840184610889565b90506100bc816000015182602001518360400151610162565b6001600160a01b0316336001600160a01b0316146100f55760405162461bcd60e51b81526004016100ec9061094a565b60405180910390fd5b60008086136101045784610106565b855b60608301519091506001600160a01b031630141561013a578151610134906001600160a01b0316338361023c565b5061015a565b60608201518251610158916001600160a01b03909116903384610464565b505b505050505050565b600080546001600160a01b0316731f98431c8ad98523631ae4a59f267346ea31f98414156101b1576000546101aa906001600160a01b03166101a5868686610698565b6106ee565b9050610235565b600054604051630b4c774160e11b81526001600160a01b0390911690631698ee82906101e59087908790879060040161090e565b60206040518083038186803b1580156101fd57600080fd5b505afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101aa91906107f2565b9392505050565b60008115610235576000846001600160a01b03166370a08231856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561029357600080fd5b505afa1580156102a7573d6000803e3d6000fd5b505050506040513d60208110156102bd57600080fd5b5051604080516001600160a01b038781166024830152604480830188905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825194955090891693919290918291908083835b6020831061033b5780518252601f19909201916020918201910161031c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461039d576040519150601f19603f3d011682016040523d82523d6000602084013e6103a2565b606091505b5050506000856001600160a01b03166370a08231866040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156103f457600080fd5b505afa158015610408573d6000803e3d6000fd5b505050506040513d602081101561041e57600080fd5b5051905081811161045b576040805162461bcd60e51b81526020600482015260026024820152612a2360f11b604482015290519081900360640190fd5b03949350505050565b60008115610690576000856001600160a01b03166370a08231856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156104bb57600080fd5b505afa1580156104cf573d6000803e3d6000fd5b505050506040513d60208110156104e557600080fd5b5051604080516001600160a01b0388811660248301528781166044830152606480830188905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17815292518251949550908a1693919290918291908083835b6020831061056b5780518252601f19909201916020918201910161054c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146105cd576040519150601f19603f3d011682016040523d82523d6000602084013e6105d2565b606091505b5050506000866001600160a01b03166370a08231866040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561062457600080fd5b505afa158015610638573d6000803e3d6000fd5b505050506040513d602081101561064e57600080fd5b5051905081811161068c576040805162461bcd60e51b81526020600482015260036024820152622a232360e91b604482015290519081900360640190fd5b0390505b949350505050565b6106a06107d2565b826001600160a01b0316846001600160a01b031611156106be579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b600081602001516001600160a01b031682600001516001600160a01b03161061071657600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301206001600160f81b031960a085015294901b6bffffffffffffffffffffffff191660a183015260b58201939093527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d5808301919091528251808303909101815260f5909101909152805191012090565b604080516060810182526000808252602082018190529181019190915290565b600060208284031215610803578081fd5b815161023581610978565b60008060008060608587031215610823578283fd5b8435935060208501359250604085013567ffffffffffffffff80821115610848578384fd5b818701915087601f83011261085b578384fd5b813581811115610869578485fd5b88602082850101111561087a578485fd5b95989497505060200194505050565b60006080828403121561089a578081fd5b6040516080810181811067ffffffffffffffff821117156108b757fe5b60405282356108c581610978565b815260208301356108d581610978565b6020820152604083013562ffffff811681146108ef578283fd5b6040820152606083013561090281610978565b60608201529392505050565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b6001600160a01b0391909116815260200190565b602080825260149082015273158cc818d85b1b08189858dac81a5b9d985b1a5960621b604082015260600190565b6001600160a01b038116811461098d57600080fd5b5056fea26469706673582212205139dd44899a6063cce7eca5872db3c80a6e1064f715046bf3db8647ef3f608964736f6c63430007060033";

type UniV3DexConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniV3DexConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniV3Dex__factory extends ContractFactory {
  constructor(...args: UniV3DexConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UniV3Dex & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UniV3Dex__factory {
    return super.connect(runner) as UniV3Dex__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniV3DexInterface {
    return new Interface(_abi) as UniV3DexInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): UniV3Dex {
    return new Contract(address, _abi, runner) as unknown as UniV3Dex;
  }
}
