/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOPBorrowing,
  IOPBorrowingInterface,
} from "../../../../contracts/udex/ControllerV1.sol/IOPBorrowing";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "marketId",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "collateralIndex",
        type: "bool",
      },
    ],
    name: "activeCollaterals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "marketId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "pool0",
        type: "address",
      },
      {
        internalType: "address",
        name: "pool1",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "dexData",
        type: "bytes",
      },
    ],
    name: "addMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IOPBorrowing__factory {
  static readonly abi = _abi;
  static createInterface(): IOPBorrowingInterface {
    return new Interface(_abi) as IOPBorrowingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IOPBorrowing {
    return new Contract(address, _abi, runner) as unknown as IOPBorrowing;
  }
}
