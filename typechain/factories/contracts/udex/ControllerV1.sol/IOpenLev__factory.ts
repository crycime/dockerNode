/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOpenLev,
  IOpenLevInterface,
} from "../../../../contracts/udex/ControllerV1.sol/IOpenLev";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "marketId",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "longToken",
        type: "bool",
      },
    ],
    name: "activeTrades",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "deposited",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "held",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "depositToken",
            type: "bool",
          },
          {
            internalType: "uint128",
            name: "lastBlockNum",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "heldRelativeBorrowed",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Trade",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IOpenLev__factory {
  static readonly abi = _abi;
  static createInterface(): IOpenLevInterface {
    return new Interface(_abi) as IOpenLevInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IOpenLev {
    return new Contract(address, _abi, runner) as unknown as IOpenLev;
  }
}
