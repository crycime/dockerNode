/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Delegate,
  DelegateInterface,
} from "../../../../contracts/udex/test/Delegate";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delegatePrivate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delegatePrivateConstant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delegatePrivateParam",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "delegatePrivateParam_",
        type: "uint256",
      },
    ],
    name: "setDelegatePrivateParam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052606460025534801561001557600080fd5b50610192806100256000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a6f9dae11161005b578063a6f9dae1146100df578063a8bc504a14610105578063c4d66de8146100df578063dcd8ff1c1461010d5761007d565b80632405aaef146100825780638da5cb5b1461009c5780639ed41acf146100c0575b600080fd5b61008a610115565b60408051918252519081900360200190f35b6100a461011a565b604080516001600160a01b039092168252519081900360200190f35b6100dd600480360360208110156100d657600080fd5b5035610129565b005b6100dd600480360360208110156100f557600080fd5b50356001600160a01b031661012e565b61008a610150565b61008a610156565b600181565b6000546001600160a01b031681565b600255565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60025481565b6001548156fea2646970667358221220f48f7ca5de12ae21db0634ccc327f00ba8c98c2670978286434835c8ba614f7464736f6c63430007060033";

type DelegateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DelegateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Delegate__factory extends ContractFactory {
  constructor(...args: DelegateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Delegate & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Delegate__factory {
    return super.connect(runner) as Delegate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DelegateInterface {
    return new Interface(_abi) as DelegateInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Delegate {
    return new Contract(address, _abi, runner) as unknown as Delegate;
  }
}
