/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  Mock1inchRouter,
  Mock1inchRouterInterface,
} from "../../../../../contracts/udex/test/Mock1inchRouter.sol/Mock1inchRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mockExchangeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "clipperSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setVerifyAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "dstToken",
        type: "address",
      },
    ],
    name: "setVerifyDstToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
    ],
    name: "setVerifyMinReturn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "setVerifyPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
    ],
    name: "setVerifySrcToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAggregationExecutor",
        name: "executor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "srcToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "dstToken",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "srcReceiver",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "dstReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
        ],
        internalType: "struct Mock1inchRouter.SwapDescription",
        name: "desc",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spentAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "uniswapV3Swap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "srcToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "unoswap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyDstToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyMinReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "verifyPools",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifySrcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161124038038061124083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6111af806100916000396000f3fe6080604052600436106100dd5760003560e01c8063b4f4f6ed1161007f578063d38770aa11610059578063d38770aa1461020d578063e355e81b1461022d578063e449022e14610242578063f8b6d69614610255576100dd565b8063b4f4f6ed146101c3578063bc735607146101d8578063c897d471146101f8576100dd565b8063644afb98116100bb578063644afb981461014e5780636779ffc9146101615780637d78572b146101835780638e89b319146101a3576100dd565b80630502b1c5146100e257806312aa3caf1461010b578063180a8e011461012c575b600080fd5b6100f56100f0366004610e8c565b610275565b604051610102919061114a565b60405180910390f35b61011e610119366004610dee565b610474565b604051610102929190611153565b34801561013857600080fd5b5061014c610147366004610ef4565b61086e565b005b6100f561015c366004610f24565b610873565b34801561016d57600080fd5b50610176610a3a565b6040516101029190610f75565b34801561018f57600080fd5b506100f561019e366004610ef4565b610a49565b3480156101af57600080fd5b5061014c6101be366004610ef4565b610a6a565b3480156101cf57600080fd5b50610176610a6f565b3480156101e457600080fd5b5061014c6101f3366004610d6b565b610a7e565b34801561020457600080fd5b506100f5610aa0565b34801561021957600080fd5b5061014c610228366004610d6b565b610aa6565b34801561023957600080fd5b506100f5610ac8565b6100f5610250366004610f24565b610ace565b34801561026157600080fd5b5061014c610270366004610d8e565b610b70565b6004546000906001600160a01b038781169116146102ae5760405162461bcd60e51b81526004016102a590610fc6565b60405180910390fd5b60015485146102cf5760405162461bcd60e51b81526004016102a590611072565b60025484146102f05760405162461bcd60e51b81526004016102a5906110f7565b60035460005b8181101561034e576003818154811061030b57fe5b906000526020600020015485858381811061032257fe5b90506020020135146103465760405162461bcd60e51b81526004016102a590610fee565b6001016102f6565b50600554610364906001600160a01b0316610b81565b6005546040516370a0823160e01b81526001600160a01b03909116906370a0823190610394903090600401610f75565b60206040518083038186803b1580156103ac57600080fd5b505afa1580156103c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e49190610f0c565b60055460405163a9059cbb60e01b81529193506001600160a01b03169063a9059cbb906104179033908690600401610fad565b602060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104699190610dce565b505095945050505050565b60008060808701356104985760405162461bcd60e51b81526004016102a590611098565b60a08701356104b95760405162461bcd60e51b81526004016102a59061104a565b60006104c86020890189610d6b565b905060006104dc60408a0160208b01610d6b565b90506001600160a01b0382166323b872dd336104fe60608d0160408e01610d6b565b8c608001356040518463ffffffff1660e01b815260040161052193929190610f89565b602060405180830381600087803b15801561053b57600080fd5b505af115801561054f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105739190610dce565b5061057d81610b81565b6040516370a0823160e01b815260808a013593506001600160a01b038216906370a08231906105b0903090600401610f75565b60206040518083038186803b1580156105c857600080fd5b505afa1580156105dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106009190610f0c565b93508361061f5760405162461bcd60e51b81526004016102a590611120565b6000199093019260c089013560011615610780576040516370a0823160e01b81526000906001600160a01b038416906370a0823190610662903090600401610f75565b60206040518083038186803b15801561067a57600080fd5b505afa15801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190610f0c565b9050600181111561074e5760405163a9059cbb60e01b81529381900360010193600019909101906001600160a01b0384169063a9059cbb906106fa9033908590600401610fad565b602060405180830381600087803b15801561071457600080fd5b505af1158015610728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c9190610dce565b505b838a60a00135028a608001358602101561077a5760405162461bcd60e51b81526004016102a5906110c0565b506107a4565b8860a001358410156107a45760405162461bcd60e51b81526004016102a590611013565b6000806107b760808c0160608d01610d6b565b6001600160a01b0316146107da576107d560808b0160608c01610d6b565b6107dc565b335b60405163a9059cbb60e01b81529091506001600160a01b0383169063a9059cbb9061080d9084908990600401610fad565b602060405180830381600087803b15801561082757600080fd5b505af115801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f9190610dce565b50505050965096945050505050565b600255565b600060015485146108965760405162461bcd60e51b81526004016102a590611072565b60025484146108b75760405162461bcd60e51b81526004016102a5906110f7565b60035460005b8181101561091557600381815481106108d257fe5b90600052602060002001548585838181106108e957fe5b905060200201351461090d5760405162461bcd60e51b81526004016102a590610fee565b6001016108bd565b5060055461092b906001600160a01b0316610b81565b6005546040516370a0823160e01b81526001600160a01b03909116906370a082319061095b903090600401610f75565b60206040518083038186803b15801561097357600080fd5b505afa158015610987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ab9190610f0c565b60055460405163a9059cbb60e01b81529193506001600160a01b03169063a9059cbb906109de9033908690600401610fad565b602060405180830381600087803b1580156109f857600080fd5b505af1158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190610dce565b5050949350505050565b6004546001600160a01b031681565b60038181548110610a5957600080fd5b600091825260209091200154905081565b600155565b6005546001600160a01b031681565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b60025481565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60015481565b60006001548514610af15760405162461bcd60e51b81526004016102a590611072565b6002548414610b125760405162461bcd60e51b81526004016102a5906110f7565b60035460005b818110156109155760038181548110610b2d57fe5b9060005260206000200154858583818110610b4457fe5b9050602002013514610b685760405162461bcd60e51b81526004016102a590610fee565b600101610b18565b610b7c60038383610c82565b505050565b6000546040516370a0823160e01b81526001600160a01b03808416926323b872dd92911690309084906370a0823190610bbe908590600401610f75565b60206040518083038186803b158015610bd657600080fd5b505afa158015610bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0e9190610f0c565b6040518463ffffffff1660e01b8152600401610c2c93929190610f89565b602060405180830381600087803b158015610c4657600080fd5b505af1158015610c5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7e9190610dce565b5050565b828054828255906000526020600020908101928215610cbd579160200282015b82811115610cbd578235825591602001919060010190610ca2565b50610cc9929150610ccd565b5090565b5b80821115610cc95760008155600101610cce565b60008083601f840112610cf3578182fd5b50813567ffffffffffffffff811115610d0a578182fd5b6020830191508360208083028501011115610d2457600080fd5b9250929050565b60008083601f840112610d3c578182fd5b50813567ffffffffffffffff811115610d53578182fd5b602083019150836020828501011115610d2457600080fd5b600060208284031215610d7c578081fd5b8135610d8781611161565b9392505050565b60008060208385031215610da0578081fd5b823567ffffffffffffffff811115610db6578182fd5b610dc285828601610ce2565b90969095509350505050565b600060208284031215610ddf578081fd5b81518015158114610d87578182fd5b600080600080600080868803610140811215610e08578283fd5b8735610e1381611161565b965060e0601f1982011215610e26578283fd5b5060208701945061010087013567ffffffffffffffff80821115610e48578384fd5b610e548a838b01610d2b565b9096509450610120890135915080821115610e6d578384fd5b50610e7a89828a01610d2b565b979a9699509497509295939492505050565b600080600080600060808688031215610ea3578081fd5b8535610eae81611161565b94506020860135935060408601359250606086013567ffffffffffffffff811115610ed7578182fd5b610ee388828901610ce2565b969995985093965092949392505050565b600060208284031215610f05578081fd5b5035919050565b600060208284031215610f1d578081fd5b5051919050565b60008060008060608587031215610f39578384fd5b8435935060208501359250604085013567ffffffffffffffff811115610f5d578283fd5b610f6987828801610ce2565b95989497509550505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252600e908201526d39b931aa37b5b2b71032b93937b960911b604082015260600190565b6020808252600b908201526a3837b7b6399032b93937b960a91b604082015260600190565b60208082526018908201527f52657475726e416d6f756e7449734e6f74456e6f756768320000000000000000604082015260600190565b6020808252600e908201526d2d32b937a6b4b72932ba3ab9371960911b604082015260600190565b6020808252600c908201526b30b6b7bab73a1032b93937b960a11b604082015260600190565b6020808252600e908201526d5a65726f4d696e52657475726e3160901b604082015260600190565b60208082526018908201527f52657475726e416d6f756e7449734e6f74456e6f756768310000000000000000604082015260600190565b6020808252600f908201526e36b4b72932ba3ab9371032b93937b960891b604082015260600190565b60208082526010908201526f16995c9bd4995d1d5c9b905b5bdd5b9d60821b604082015260600190565b90815260200190565b918252602082015260400190565b6001600160a01b038116811461117657600080fd5b5056fea2646970667358221220a74dd6239a3fb7b7273464f4c8983ba0e05935ceb79e46fc15d6223cbb42851864736f6c63430007060033";

type Mock1inchRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Mock1inchRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Mock1inchRouter__factory extends ContractFactory {
  constructor(...args: Mock1inchRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _mockExchangeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_mockExchangeAddress, overrides || {});
  }
  override deploy(
    _mockExchangeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_mockExchangeAddress, overrides || {}) as Promise<
      Mock1inchRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Mock1inchRouter__factory {
    return super.connect(runner) as Mock1inchRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Mock1inchRouterInterface {
    return new Interface(_abi) as Mock1inchRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Mock1inchRouter {
    return new Contract(address, _abi, runner) as unknown as Mock1inchRouter;
  }
}
