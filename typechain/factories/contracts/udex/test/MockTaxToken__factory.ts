/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../../common";
import type {
  MockTaxToken,
  MockTaxTokenInterface,
} from "../../../../contracts/udex/test/MockTaxToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_NAME",
        type: "string",
      },
      {
        internalType: "string",
        name: "_SYMBOL",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_txFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lpFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "routerAddress",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minTokensBeforeSwap",
        type: "uint256",
      },
    ],
    name: "MinTokensBeforeSwapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensSwapped",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethReceived",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensIntoLiqudity",
        type: "uint256",
      },
    ],
    name: "SwapAndLiquify",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SwapAndLiquifyEnabledUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_liquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_taxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_uniswapBuyLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_uniswapBuyTaxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_uniswapSellLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_uniswapSellTaxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tAmount",
        type: "uint256",
      },
    ],
    name: "deliver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "excludeFromFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "excludeFromReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "includeInFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "includeInReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isExcludedFromFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isExcludedFromReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numTokensSellToAddToLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deductTransferFee",
        type: "bool",
      },
    ],
    name: "reflectionFromToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidityFee",
        type: "uint256",
      },
    ],
    name: "setLiquidityFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxTxPercent",
        type: "uint256",
      },
    ],
    name: "setMaxTxPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToUpdate",
        type: "uint256",
      },
    ],
    name: "setNumTokensSellToAddToLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
    ],
    name: "setRouterAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "setSwapAndLiquifyEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taxFee",
        type: "uint256",
      },
    ],
    name: "setTaxFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidityFee",
        type: "uint256",
      },
    ],
    name: "setUniswapBuyLiquidityFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taxFee",
        type: "uint256",
      },
    ],
    name: "setUniswapBuyTaxFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidityFee",
        type: "uint256",
      },
    ],
    name: "setUniswapSellLiquidityFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taxFee",
        type: "uint256",
      },
    ],
    name: "setUniswapSellTaxFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapAndLiquifyEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rAmount",
        type: "uint256",
      },
    ],
    name: "tokenFromReflection",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Pair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV2Router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060408190526016805460ff60a81b1916600160a81b1790556200335738819003908190833981810160405260a08110156200003b57600080fd5b81019080805160405193929190846401000000008211156200005c57600080fd5b9083019060208201858111156200007257600080fd5b82516401000000008111828201881017156200008d57600080fd5b82525081516020918201929091019080838360005b83811015620000bc578181015183820152602001620000a2565b50505050905090810190601f168015620000ea5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010e57600080fd5b9083019060208201858111156200012457600080fd5b82516401000000008111828201881017156200013f57600080fd5b82525081516020918201929091019080838360005b838110156200016e57818101518382015260200162000154565b50505050905090810190601f1680156200019c5780820380516001836020036101000a031916815260200191505b5060409081526020820151908201516060909201519093509091506000620001c3620004cb565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35084516200022290600a906020880190620004cf565b5083516200023890600b906020870190620004cf565b506012600c81905568056bc75e2d6310000060075568031f237e1a955fffff196008819055600d859055600f84905560118590559083905560138490556014839055600e84905560108390556e604be73de4838ad9a5cf88000000006017556e09a130b963a6c115c3c7f40000000060185533600090815260016020908152604080832093909355825163c45a015560e01b8152925184936001600160a01b0385169263c45a015592600483810193829003018186803b158015620002fc57600080fd5b505afa15801562000311573d6000803e3d6000fd5b505050506040513d60208110156200032857600080fd5b5051604080516315ab88c960e31b815290519192506001600160a01b038084169263c9c6539692309287169163ad5c464891600480820192602092909190829003018186803b1580156200037b57600080fd5b505afa15801562000390573d6000803e3d6000fd5b505050506040513d6020811015620003a757600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301525160448083019260209291908290030181600087803b158015620003fa57600080fd5b505af11580156200040f573d6000803e3d6000fd5b505050506040513d60208110156200042657600080fd5b5051601680546001600160a01b03199081166001600160a01b039384161790915560158054909116918416919091179055336000818152600460209081526040808320805460ff19908116600190811790925530855282852080549091169091179055600754815190815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3505050505050506200057b565b3390565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000507576000855562000552565b82601f106200052257805160ff191683800117855562000552565b8280016001018555821562000552579182015b828111156200055257825182559160200191906001019062000535565b506200056092915062000564565b5090565b5b8082111562000560576000815560010162000565565b612dcc806200058b6000396000f3fe6080604052600436106102765760003560e01c806370a082311161014f578063b714bf62116100c1578063e13667001161007a578063e1366700146108eb578063ea2f0b3714610915578063efedd51014610948578063f0f165af1461095d578063f2fde38b14610987578063fcfda037146109ba5761027d565b8063b714bf62146107f1578063c49b9a801461081b578063d12a768814610847578063d543dbeb1461085c578063db4b374b14610886578063dd62ed3e146108b05761027d565b80638da5cb5b116101135780638da5cb5b146107165780638ee88c531461072b57806395d89b4114610755578063a457c2d71461076a578063a9059cbb146107a3578063b03e12bf146107dc5761027d565b806370a0823114610671578063715018a6146106a45780637c6ef831146106b95780637d1db4a5146106ce57806388f82020146106e35761027d565b806339509351116101e85780634549b039116101ac5780634549b0391461059a57806349bd5a5e146105cc5780634a74bb02146105e157806352390c02146105f65780635342acb4146106295780636bc87c3a1461065c5761027d565b806339509351146104bc5780633b124fe7146104f55780633bd5d1731461050a57806341cb87fc14610534578063437823ec146105675761027d565b80631694505e1161023a5780631694505e146103c157806318160ddd146103f257806323b872dd146104075780632d8381191461044a578063313ce567146104745780633685d419146104895761027d565b8063061c82d01461028257806306fdde03146102ae578063095ea7b3146103385780630cf4da381461038557806313114a9d146103ac5761027d565b3661027d57005b600080fd5b34801561028e57600080fd5b506102ac600480360360208110156102a557600080fd5b50356109e4565b005b3480156102ba57600080fd5b506102c3610a4b565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102fd5781810151838201526020016102e5565b50505050905090810190601f16801561032a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561034457600080fd5b506103716004803603604081101561035b57600080fd5b506001600160a01b038135169060200135610ae1565b604080519115158252519081900360200190f35b34801561039157600080fd5b5061039a610aff565b60408051918252519081900360200190f35b3480156103b857600080fd5b5061039a610b05565b3480156103cd57600080fd5b506103d6610b0b565b604080516001600160a01b039092168252519081900360200190f35b3480156103fe57600080fd5b5061039a610b1a565b34801561041357600080fd5b506103716004803603606081101561042a57600080fd5b506001600160a01b03813581169160208101359091169060400135610b20565b34801561045657600080fd5b5061039a6004803603602081101561046d57600080fd5b5035610ba7565b34801561048057600080fd5b5061039a610c09565b34801561049557600080fd5b506102ac600480360360208110156104ac57600080fd5b50356001600160a01b0316610c0f565b3480156104c857600080fd5b50610371600480360360408110156104df57600080fd5b506001600160a01b038135169060200135610dda565b34801561050157600080fd5b5061039a610e28565b34801561051657600080fd5b506102ac6004803603602081101561052d57600080fd5b5035610e2e565b34801561054057600080fd5b506102ac6004803603602081101561055757600080fd5b50356001600160a01b0316610f08565b34801561057357600080fd5b506102ac6004803603602081101561058a57600080fd5b50356001600160a01b03166110fc565b3480156105a657600080fd5b5061039a600480360360408110156105bd57600080fd5b50803590602001351515611182565b3480156105d857600080fd5b506103d6611214565b3480156105ed57600080fd5b50610371611223565b34801561060257600080fd5b506102ac6004803603602081101561061957600080fd5b50356001600160a01b0316611233565b34801561063557600080fd5b506103716004803603602081101561064c57600080fd5b50356001600160a01b03166113c3565b34801561066857600080fd5b5061039a6113e1565b34801561067d57600080fd5b5061039a6004803603602081101561069457600080fd5b50356001600160a01b03166113e7565b3480156106b057600080fd5b506102ac611449565b3480156106c557600080fd5b5061039a6114f5565b3480156106da57600080fd5b5061039a6114fb565b3480156106ef57600080fd5b506103716004803603602081101561070657600080fd5b50356001600160a01b0316611501565b34801561072257600080fd5b506103d661151f565b34801561073757600080fd5b506102ac6004803603602081101561074e57600080fd5b503561152e565b34801561076157600080fd5b506102c3611595565b34801561077657600080fd5b506103716004803603604081101561078d57600080fd5b506001600160a01b0381351690602001356115f6565b3480156107af57600080fd5b50610371600480360360408110156107c657600080fd5b506001600160a01b03813516906020013561165e565b3480156107e857600080fd5b5061039a611672565b3480156107fd57600080fd5b506102ac6004803603602081101561081457600080fd5b5035611678565b34801561082757600080fd5b506102ac6004803603602081101561083e57600080fd5b503515156116df565b34801561085357600080fd5b5061039a611794565b34801561086857600080fd5b506102ac6004803603602081101561087f57600080fd5b503561179a565b34801561089257600080fd5b506102ac600480360360208110156108a957600080fd5b5035611808565b3480156108bc57600080fd5b5061039a600480360360408110156108d357600080fd5b506001600160a01b038135811691602001351661186f565b3480156108f757600080fd5b506102ac6004803603602081101561090e57600080fd5b503561189a565b34801561092157600080fd5b506102ac6004803603602081101561093857600080fd5b50356001600160a01b0316611901565b34801561095457600080fd5b5061039a611984565b34801561096957600080fd5b506102ac6004803603602081101561098057600080fd5b503561198a565b34801561099357600080fd5b506102ac600480360360208110156109aa57600080fd5b50356001600160a01b03166119f1565b3480156109c657600080fd5b506102ac600480360360208110156109dd57600080fd5b5035611af3565b6109ec611b5a565b6001600160a01b03166109fd61151f565b6001600160a01b031614610a46576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b600d55565b600a8054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610ad75780601f10610aac57610100808354040283529160200191610ad7565b820191906000526020600020905b815481529060010190602001808311610aba57829003601f168201915b5050505050905090565b6000610af5610aee611b5a565b8484611b5e565b5060015b92915050565b60135481565b60095490565b6015546001600160a01b031681565b60075490565b6000610b2d848484611c4a565b610b9d84610b39611b5a565b610b9885604051806060016040528060288152602001612c8c602891396001600160a01b038a16600090815260036020526040812090610b77611b5a565b6001600160a01b031681526020810191909152604001600020549190611e75565b611b5e565b5060019392505050565b6000600854821115610bea5760405162461bcd60e51b815260040180806020018281038252602a815260200180612bd1602a913960400191505060405180910390fd5b6000610bf4611f0c565b9050610c008382611f2f565b9150505b919050565b600c5490565b610c17611b5a565b6001600160a01b0316610c2861151f565b6001600160a01b031614610c71576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526005602052604090205460ff16610cde576040805162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c726561647920696e636c756465640000000000604482015290519081900360640190fd5b60005b600654811015610dd657816001600160a01b031660068281548110610d0257fe5b6000918252602090912001546001600160a01b03161415610dce57600680546000198101908110610d2f57fe5b600091825260209091200154600680546001600160a01b039092169183908110610d5557fe5b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559184168152600282526040808220829055600590925220805460ff191690556006805480610da757fe5b600082815260209020810160001990810180546001600160a01b0319169055019055610dd6565b600101610ce1565b5050565b6000610af5610de7611b5a565b84610b988560036000610df8611b5a565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611f96565b600d5481565b6000610e38611b5a565b6001600160a01b03811660009081526005602052604090205490915060ff1615610e935760405162461bcd60e51b815260040180806020018281038252602c815260200180612d46602c913960400191505060405180910390fd5b6000610e9e83611ff7565b505050506001600160a01b038416600090815260016020526040902054919250610eca91905082612046565b6001600160a01b038316600090815260016020526040902055600854610ef09082612046565b600855600954610f009084611f96565b600955505050565b610f10611b5a565b6001600160a01b0316610f2161151f565b6001600160a01b031614610f6a576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b6000819050806001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610fa857600080fd5b505afa158015610fbc573d6000803e3d6000fd5b505050506040513d6020811015610fd257600080fd5b5051604080516315ab88c960e31b815290516001600160a01b039283169263c9c653969230929186169163ad5c464891600480820192602092909190829003018186803b15801561102257600080fd5b505afa158015611036573d6000803e3d6000fd5b505050506040513d602081101561104c57600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301525160448083019260209291908290030181600087803b15801561109e57600080fd5b505af11580156110b2573d6000803e3d6000fd5b505050506040513d60208110156110c857600080fd5b5051601680546001600160a01b039283166001600160a01b0319918216179091556015805493909216921691909117905550565b611104611b5a565b6001600160a01b031661111561151f565b6001600160a01b03161461115e576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b60006007548311156111db576040805162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c7900604482015290519081900360640190fd5b816111fa5760006111eb84611ff7565b50939550610af9945050505050565b600061120584611ff7565b50929550610af9945050505050565b6016546001600160a01b031681565b601654600160a81b900460ff1681565b61123b611b5a565b6001600160a01b031661124c61151f565b6001600160a01b031614611295576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526005602052604090205460ff1615611303576040805162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c756465640000000000604482015290519081900360640190fd5b6001600160a01b0381166000908152600160205260409020541561135d576001600160a01b03811660009081526001602052604090205461134390610ba7565b6001600160a01b0382166000908152600260205260409020555b6001600160a01b03166000818152600560205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319169091179055565b6001600160a01b031660009081526004602052604090205460ff1690565b600f5481565b6001600160a01b03811660009081526005602052604081205460ff161561142757506001600160a01b038116600090815260026020526040902054610c04565b6001600160a01b038216600090815260016020526040902054610af990610ba7565b611451611b5a565b6001600160a01b031661146261151f565b6001600160a01b0316146114ab576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60145481565b60175481565b6001600160a01b031660009081526005602052604090205460ff1690565b6000546001600160a01b031690565b611536611b5a565b6001600160a01b031661154761151f565b6001600160a01b031614611590576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b600f55565b600b8054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610ad75780601f10610aac57610100808354040283529160200191610ad7565b6000610af5611603611b5a565b84610b9885604051806060016040528060258152602001612d72602591396003600061162d611b5a565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611e75565b6000610af561166b611b5a565b8484611c4a565b60115481565b611680611b5a565b6001600160a01b031661169161151f565b6001600160a01b0316146116da576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b601355565b6116e7611b5a565b6001600160a01b03166116f861151f565b6001600160a01b031614611741576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b60168054821515600160a81b810260ff60a81b199092169190911790915560408051918252517f53726dfcaf90650aa7eb35524f4d3220f07413c8d6cb404cc8c18bf5591bc1599181900360200190a150565b60185481565b6117a2611b5a565b6001600160a01b03166117b361151f565b6001600160a01b0316146117fc576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b600c54600a0a02601755565b611810611b5a565b6001600160a01b031661182161151f565b6001600160a01b03161461186a576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b601455565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6118a2611b5a565b6001600160a01b03166118b361151f565b6001600160a01b0316146118fc576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b601155565b611909611b5a565b6001600160a01b031661191a61151f565b6001600160a01b031614611963576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600460205260409020805460ff19169055565b60125481565b611992611b5a565b6001600160a01b03166119a361151f565b6001600160a01b0316146119ec576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b601855565b6119f9611b5a565b6001600160a01b0316611a0a61151f565b6001600160a01b031614611a53576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b6001600160a01b038116611a985760405162461bcd60e51b8152600401808060200182810382526026815260200180612bfb6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b611afb611b5a565b6001600160a01b0316611b0c61151f565b6001600160a01b031614611b55576040805162461bcd60e51b81526020600482018190526024820152600080516020612cb4833981519152604482015290519081900360640190fd5b601255565b3390565b6001600160a01b038316611ba35760405162461bcd60e51b8152600401808060200182810382526024815260200180612d226024913960400191505060405180910390fd5b6001600160a01b038216611be85760405162461bcd60e51b8152600401808060200182810382526022815260200180612c216022913960400191505060405180910390fd5b6001600160a01b03808416600081815260036020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316611c8f5760405162461bcd60e51b8152600401808060200182810382526025815260200180612cfd6025913960400191505060405180910390fd5b6001600160a01b038216611cd45760405162461bcd60e51b8152600401808060200182810382526023815260200180612bae6023913960400191505060405180910390fd5b60008111611d135760405162461bcd60e51b8152600401808060200182810382526029815260200180612cd46029913960400191505060405180910390fd5b611d1b61151f565b6001600160a01b0316836001600160a01b031614158015611d555750611d3f61151f565b6001600160a01b0316826001600160a01b031614155b15611d9b57601754811115611d9b5760405162461bcd60e51b8152600401808060200182810382526028815260200180612c436028913960400191505060405180910390fd5b6000611da6306113e7565b90506017548110611db657506017545b60185481108015908190611dd45750601654600160a01b900460ff16155b8015611dee57506016546001600160a01b03868116911614155b8015611e035750601654600160a81b900460ff165b15611e16576018549150611e16826120a3565b6001600160a01b03851660009081526004602052604090205460019060ff1680611e5857506001600160a01b03851660009081526004602052604090205460ff165b15611e61575060005b611e6d86868684612149565b505050505050565b60008184841115611f045760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611ec9578181015183820152602001611eb1565b50505050905090810190601f168015611ef65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000806000611f19612357565b9092509050611f288282611f2f565b9250505090565b6000808211611f85576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381611f8e57fe5b049392505050565b600082820183811015611ff0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600080600080600080600080600061200e8a6124ba565b925092509250600080600061202c8d8686612027611f0c565b6124fc565b919f909e50909c50959a5093985091965092945050505050565b60008282111561209d576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6016805460ff60a01b1916600160a01b17905560006120c3826002611f2f565b905060006120d18383612046565b9050476120dd8361254c565b60006120e94783612046565b90506120f583826126f3565b604080518581526020810183905280820185905290517f17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb5619181900360600190a150506016805460ff60a01b19169055505050565b8061215b576121566127c0565b6121b5565b6016546001600160a01b038481169116141561218a576121796127c0565b601154600d55601254600f556121b5565b6016546001600160a01b03858116911614156121b5576121a86127c0565b601354600d55601454600f555b6001600160a01b03841660009081526005602052604090205460ff1680156121f657506001600160a01b03831660009081526005602052604090205460ff16155b1561220b576122068484846127d7565b612309565b6001600160a01b03841660009081526005602052604090205460ff1615801561224c57506001600160a01b03831660009081526005602052604090205460ff165b1561225c576122068484846128fb565b6001600160a01b03841660009081526005602052604090205460ff1615801561229e57506001600160a01b03831660009081526005602052604090205460ff16155b156122ae576122068484846129a4565b6001600160a01b03841660009081526005602052604090205460ff1680156122ee57506001600160a01b03831660009081526005602052604090205460ff165b156122fe576122068484846129e8565b6123098484846129a4565b8061231b57612316612a5b565b612351565b6016546001600160a01b038481169116148061234457506016546001600160a01b038581169116145b1561235157612351612a5b565b50505050565b6008546007546000918291825b6006548110156124885782600160006006848154811061238057fe5b60009182526020808320909101546001600160a01b0316835282019290925260400190205411806123e557508160026000600684815481106123be57fe5b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b156123fc57600854600754945094505050506124b6565b61243c600160006006848154811061241057fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020548490612046565b925061247e600260006006848154811061245257fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020548390612046565b9150600101612364565b5060075460085461249891611f2f565b8210156124b0576008546007549350935050506124b6565b90925090505b9091565b6000806000806124c985612a69565b905060006124d686612a8b565b905060006124ee826124e88986612046565b90612046565b979296509094509092505050565b600080808061250b8886612aa7565b905060006125198887612aa7565b905060006125278888612aa7565b90506000612539826124e88686612046565b939b939a50919850919650505050505050565b604080516002808252606082018352600092602083019080368337019050509050308160008151811061257b57fe5b6001600160a01b03928316602091820292909201810191909152601554604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b1580156125cf57600080fd5b505afa1580156125e3573d6000803e3d6000fd5b505050506040513d60208110156125f957600080fd5b505181518290600190811061260a57fe5b6001600160a01b0392831660209182029290920101526015546126309130911684611b5e565b60155460405163791ac94760e01b8152600481018481526000602483018190523060648401819052426084850181905260a060448601908152875160a487015287516001600160a01b039097169663791ac947968a968a9594939092909160c40190602080880191028083838b5b838110156126b657818101518382015260200161269e565b505050509050019650505050505050600060405180830381600087803b1580156126df57600080fd5b505af1158015611e6d573d6000803e3d6000fd5b60155461270b9030906001600160a01b031684611b5e565b6015546001600160a01b031663f305d71982308560008061272a61151f565b426040518863ffffffff1660e01b815260040180876001600160a01b03168152602001868152602001858152602001848152602001836001600160a01b0316815260200182815260200196505050505050506060604051808303818588803b15801561279557600080fd5b505af11580156127a9573d6000803e3d6000fd5b50505050506040513d606081101561235157600080fd5b600d8054600e55600f805460105560009182905555565b6000806000806000806127e987611ff7565b6001600160a01b038f16600090815260026020526040902054959b5093995091975095509350915061281b9088612046565b6001600160a01b038a1660009081526002602090815260408083209390935560019052205461284a9087612046565b6001600160a01b03808b1660009081526001602052604080822093909355908a16815220546128799086611f96565b6001600160a01b03891660009081526001602052604090205561289b81612b00565b6128a58483612b89565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3505050505050505050565b60008060008060008061290d87611ff7565b6001600160a01b038f16600090815260016020526040902054959b5093995091975095509350915061293f9087612046565b6001600160a01b03808b16600090815260016020908152604080832094909455918b168152600290915220546129759084611f96565b6001600160a01b0389166000908152600260209081526040808320939093556001905220546128799086611f96565b6000806000806000806129b687611ff7565b6001600160a01b038f16600090815260016020526040902054959b5093995091975095509350915061284a9087612046565b6000806000806000806129fa87611ff7565b6001600160a01b038f16600090815260026020526040902054959b50939950919750955093509150612a2c9088612046565b6001600160a01b038a1660009081526002602090815260408083209390935560019052205461293f9087612046565b600e54600d55601054600f55565b6000610af96064612a85600d5485612aa790919063ffffffff16565b90611f2f565b6000610af96064612a85600f5485612aa790919063ffffffff16565b600082612ab657506000610af9565b82820282848281612ac357fe5b0414611ff05760405162461bcd60e51b8152600401808060200182810382526021815260200180612c6b6021913960400191505060405180910390fd5b6000612b0a611f0c565b90506000612b188383612aa7565b30600090815260016020526040902054909150612b359082611f96565b3060009081526001602090815260408083209390935560059052205460ff1615612b845730600090815260026020526040902054612b739084611f96565b306000908152600260205260409020555b505050565b600854612b969083612046565b600855600954612ba69082611f96565b600955505056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373416d6f756e74206d757374206265206c657373207468616e20746f74616c207265666c656374696f6e734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f20616464726573735472616e7366657220616d6f756e74206578636565647320746865206d61785478416d6f756e742e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f45524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734578636c75646564206164647265737365732063616e6e6f742063616c6c20746869732066756e6374696f6e45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220a24ad8df8e2af08692fbe62a63814421b6177c34730e80fda617b5e687ed317e64736f6c63430007060033";

type MockTaxTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTaxTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockTaxToken__factory extends ContractFactory {
  constructor(...args: MockTaxTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _NAME: string,
    _SYMBOL: string,
    _txFee: BigNumberish,
    _lpFee: BigNumberish,
    routerAddress: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _NAME,
      _SYMBOL,
      _txFee,
      _lpFee,
      routerAddress,
      overrides || {}
    );
  }
  override deploy(
    _NAME: string,
    _SYMBOL: string,
    _txFee: BigNumberish,
    _lpFee: BigNumberish,
    routerAddress: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _NAME,
      _SYMBOL,
      _txFee,
      _lpFee,
      routerAddress,
      overrides || {}
    ) as Promise<
      MockTaxToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockTaxToken__factory {
    return super.connect(runner) as MockTaxToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTaxTokenInterface {
    return new Interface(_abi) as MockTaxTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockTaxToken {
    return new Contract(address, _abi, runner) as unknown as MockTaxToken;
  }
}
