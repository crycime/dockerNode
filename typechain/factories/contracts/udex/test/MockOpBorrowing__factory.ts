/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockOpBorrowing,
  MockOpBorrowingInterface,
} from "../../../../contracts/udex/test/MockOpBorrowing";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "activeCollaterals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_marketId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_pool0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pool1",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "dexData",
        type: "bytes",
      },
    ],
    name: "addMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "marketId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "marketId",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "collateralIndex",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
    ],
    name: "setActiveBorrows",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610313806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806305ea3ed5146100675780635bdb2c8f1461008b5780636ed71ede1461015757806378994eaa14610176578063c81533a4146101c0578063e552f82b146101c8575b600080fd5b61006f610206565b604080516001600160a01b039092168252519081900360200190f35b610155600480360360808110156100a157600080fd5b61ffff823516916001600160a01b036020820135811692604083013590911691908101906080810160608201356401000000008111156100e057600080fd5b8201836020820111156100f257600080fd5b8035906020019184600183028401116401000000008311171561011457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610215945050505050565b005b61015f610264565b6040805161ffff9092168252519081900360200190f35b6101ae6004803603606081101561018c57600080fd5b506001600160a01b038135169061ffff6020820135169060400135151561026e565b60408051918252519081900360200190f35b61006f610291565b610155600480360360808110156101de57600080fd5b506001600160a01b038135169061ffff602082013516906040810135151590606001356102a6565b6001546001600160a01b031681565b506000805461ffff191661ffff949094169390931762010000600160b01b031916620100006001600160a01b039384160217909255600180546001600160a01b03191692909116919091179055565b60005461ffff1681565b600260209081526000938452604080852082529284528284209052825290205481565b6000546201000090046001600160a01b031681565b6001600160a01b03909316600090815260026020908152604080832061ffff9095168352938152838220921515825291909152205556fea26469706673582212206b87a7b307f89174657c9a2ebbfb77b865dc392d9f8b8e9f0f5ab69f765f983864736f6c63430007060033";

type MockOpBorrowingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOpBorrowingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOpBorrowing__factory extends ContractFactory {
  constructor(...args: MockOpBorrowingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockOpBorrowing & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockOpBorrowing__factory {
    return super.connect(runner) as MockOpBorrowing__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOpBorrowingInterface {
    return new Interface(_abi) as MockOpBorrowingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockOpBorrowing {
    return new Contract(address, _abi, runner) as unknown as MockOpBorrowing;
  }
}
